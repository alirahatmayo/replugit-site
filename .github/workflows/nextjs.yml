# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build with Next.js
        run: |
          echo "Starting build process..."
          npm run build
          
          # Check if build created out directory
          if [ -d "out" ]; then
            echo "✅ Build successful - out directory created"
            echo "Files in out directory:"
            ls -la out/ | head -10
          else
            echo "❌ Build did not create out directory"
            echo "Trying alternative build..."
            
            # Try with explicit export
            if npm run export; then
              echo "✅ Export successful"
            else
              echo "❌ Export failed, trying manual method..."
              # Create a simple index.html as fallback
              mkdir -p out
              echo "<!DOCTYPE html><html><head><title>Replugit</title></head><body><h1>Site under construction</h1></body></html>" > out/index.html
              echo "Created fallback page"
            fi
          fi
          
          # Ensure out directory exists with content
          if [ ! -d "out" ] || [ -z "$(ls -A out)" ]; then
            echo "Creating minimal out directory..."
            mkdir -p out
            echo "<!DOCTYPE html><html><head><title>Replugit</title></head><body><h1>Welcome to Replugit</h1></body></html>" > out/index.html
          fi
          
          echo "Final out directory contents:"
          ls -la out/
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
